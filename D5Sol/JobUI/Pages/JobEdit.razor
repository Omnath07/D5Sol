@page "/jobedit/{id}"
@using DataLayer.Models
@using JobUI.Services
@inject IProductServices productServices
@inject NavigationManager Navigation;

<h3>Edit Job</h3>
<from>
 @if (Data==null)
{
        <div>Loding.....</div>
    }
    else
    {
        @if (Data.Any())
        {
            @foreach (var item in Data)
            {
                <div class="form-group">
                    <label>Title</label>
                    <input class="form-control"  @bind="@item.title"/>
                </div>   <div class="form-group">
                    <label>Description</label>
                    <input class="form-control" @bind="@item.description"/>
                </div>    <div class="form-group">
                    <label>Location</label>
                    <input class="form-control" @bind="@item.locationId"/>
                </div>    <div class="form-group">
                    <input type="button" class="btn btn-primary" value="Save" @onclick="@EditJob" />
                </div>
            }

        }
        }
        </from>


@code {
    [Parameter]
    public string id { get; set; }
    jobs job = new jobs();
    public List<jobs> Data { get; set; }

    protected override async Task OnInitializedAsync()
    {
       Data=(await productServices.getJobId(id)).ToList();

    }

   
    protected async Task EditJob()
    {
        await productServices.EditJob(job);
        Navigation.NavigateTo("JobList");
    }
}